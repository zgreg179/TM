package com.search.tm.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import lombok.AllArgsConstructor;
import lombok.Getter;

import javax.persistence.EntityNotFoundException;
import java.util.Arrays;

@Getter
@JsonFormat(shape = JsonFormat.Shape.OBJECT)
@AllArgsConstructor
public enum Country {
    BANGLADESH("BD"),
    BELGIUM("BE"),
    BURKINA_FASO("BF"),
    BULGARIA("BG"),
    BOSNIA_AND_HERZEGOVINA("BA"),
    BARBADOS("BB"),
    WALLIS_AND_FUTUNA("WF"),
    SAINT_BARTHELEMY("BL"),
    BERMUDA("BM"),
    BRUNEI("BN"),
    BOLIVIA("BO"),
    BAHRAIN("BH"),
    BURUNDI("BI"),
    BENIN("BJ"),
    BHUTAN("BT"),
    JAMAICA("JM"),
    BOUVET_ISLAND("BV"),
    BOTSWANA("BW"),
    SAMOA("WS"),
    BONAIRE_SAINT_EUSTATIUS_AND_SABA("BQ"),
    BRAZIL("BR"),
    BAHAMAS("BS"),
    JERSEY("JE"),
    BELARUS("BY"),
    BELIZE("BZ"),
    RUSSIA("RU"),
    RWANDA("RW"),
    SERBIA("RS"),
    EAST_TIMOR("TL"),
    REUNION("RE"),
    TURKMENISTAN("TM"),
    TAJIKISTAN("TJ"),
    ROMANIA("RO"),
    TOKELAU("TK"),
    GUINEA_BISSAU("GW"),
    GUAM("GU"),
    GUATEMALA("GT"),
    SOUTH_GEORGIA_AND_THE_SOUTH_SANDWICH_ISLANDS("GS"),
    GREECE("GR"),
    EQUATORIAL_GUINEA("GQ"),
    GUADELOUPE("GQ"),
    JAPAN("JP"),
    GUYANA("GY"),
    GUERNSEY("GG"),
    FRENCH_GUIANA("GF"),
    GEORGIA("GE"),
    GRENADA("GD"),
    UNITED_KINGDOM("GB"),
    GABON("GA"),
    EL_SALVADOR("SV"),
    GUINEA("GN"),
    GAMBIA("GM"),
    GREENLAND("GL"),
    GIBRALTAR("GI"),
    GHANA("GH"),
    OMAN("OM"),
    TUNISIA("TN"),
    JORDAN("JO"),
    CROATIA("HR"),
    HAITI("HT"),
    HUNGARY("HU"),
    HONG_KONG("HK"),
    HONDURAS("HN"),
    HEARD_ISLAND_AND_MCDONALD_ISLANDS("HM"),
    VENEZUELA("VE"),
    PUERTO_RICO("PR"),
    PALESTINIAN_TERRITORY("PS"),
    PALAU("PW"),
    PORTUGAL("PT"),
    SVALBARD_AND_JAN_MAYEN("SJ"),
    PARAGUAY("PY"),
    IRAQ("IQ"),
    PANAMA("PA"),
    FRENCH_POLYNESIA("PF"),
    PAPUA_NEW_GUINEA("PG"),
    PERU("PE"),
    PAKISTAN("PK"),
    PHILIPPINES("PH"),
    PITCAIRN("PN"),
    POLAND("PL"),
    SAINT_PIERRE_AND_MIQUELON("PM"),
    ZAMBIA("ZM"),
    WESTERN_SAHARA("EH"),
    ESTONIA("EE"),
    EGYPT("EG"),
    SOUTH_AFRICA("ZA"),
    ECUADOR("EC"),
    ITALY("IT"),
    VIETNAM("VN"),
    SOLOMON_ISLANDS("SB"),
    ETHIOPIA("ET"),
    SOMALIA("SO"),
    ZIMBABWE("ZW"),
    SAUDI_ARABIA("SA"),
    SPAIN("ES"),
    ERITREA("ER"),
    MONTENEGRO("ME"),
    MOLDOVA("MD"),
    MADAGASCAR("MG"),
    SAINT_MARTIN("MF"),
    MOROCCO("MA"),
    MONACO("MC"),
    UZBEKISTAN("UZ"),
    MYANMAR("MM"),
    MALI("ML"),
    MACAO("MO"),
    MONGOLIA("MN"),
    MARSHALL_ISLANDS("MH"),
    MACEDONIA("MK"),
    MAURITIUS("MU"),
    MALTA("MT"),
    MALAWI("MW"),
    MALDIVES("MV"),
    MARTINIQUE("MQ"),
    NORTHERN_MARIANA_ISLANDS("MP"),
    MONTSERRAT("MS"),
    MAURITANIA("MR"),
    ISLE_OF_MAN("IM"),
    UGANDA("UG"),
    TANZANIA("TZ"),
    MALAYSIA("MY"),
    MEXICO("MX"),
    ISRAEL("IL"),
    FRANCE("FR"),
    BRITISH_INDIAN_OCEAN_TERRITORY("IO"),
    SAINT_HELENA("SH"),
    FINLAND("FI"),
    FIJI("FJ"),
    FALKLAND_ISLANDS("FK"),
    MICRONESIA("FM"),
    FAROE_ISLANDS("FO"),
    NICARAGUA("NI"),
    NETHERLANDS("NL"),
    NORWAY("NO"),
    NAMIBIA("NA"),
    VANUATU("VU"),
    NEW_CALEDONIA("NC"),
    NIGER("NE"),
    NORFOLK_ISLAND("NF"),
    NIGERIA("NG"),
    NEW_ZEALAND("NZ"),
    NEPAL("NP"),
    NAURU("NR"),
    NIUE("NU"),
    COOK_ISLANDS("CK"),
    KOSOVO("XK"),
    IVORY_COAST("CI"),
    SWITZERLAND("CH"),
    COLOMBIA("CO"),
    CHINA("CN"),
    CAMEROON("CM"),
    CHILE("CL"),
    COCOS_ISLANDS("CC"),
    CANADA("CA"),
    REPUBLIC_OF_THE_CONGO("CG"),
    CENTRAL_AFRICAN_REPUBLIC("CF"),
    DEMOCRATIC_REPUBLIC_OF_THE_CONGO("CD"),
    CZECH_REPUBLIC("CZ"),
    CYPRUS("CY"),
    CHRISTMAS_ISLAND("CX"),
    COSTA_RICA("CR"),
    CURACAO("CW"),
    CAPE_VERDE("CV"),
    CUBA("CU"),
    SWAZILAND("SZ"),
    SYRIA("SY"),
    SINT_MAARTEN("SX"),
    KYRGYZSTAN("KG"),
    KENYA("KE"),
    SOUTH_SUDAN("SS"),
    SURINAME("SR"),
    KIRIBATI("KI"),
    CAMBODIA("KH"),
    SAINT_KITTS_AND_NEVIS("KN"),
    COMOROS("KM"),
    SAO_TOME_AND_PRINCIPE("ST"),
    SLOVAKIA("SK"),
    SOUTH_KOREA("KR"),
    SLOVENIA("SI"),
    NORTH_KOREA("KP"),
    KUWAIT("KW"),
    SENEGAL("SN"),
    SAN_MARINO("SM"),
    SIERRA_LEONE("SL"),
    SEYCHELLES("SC"),
    KAZAKHSTAN("KZ"),
    CAYMAN_ISLANDS("KY"),
    SINGAPORE("SG"),
    SWEDEN("SE"),
    SUDAN("SD"),
    DOMINICAN_REPUBLIC("DO"),
    DOMINICA("DM"),
    DJIBOUTI("DJ"),
    DENMARK("DK"),
    BRITISH_VIRGIN_ISLANDS("VG"),
    GERMANY("DE"),
    YEMEN("YE"),
    ALGERIA("DZ"),
    USA("US"),
    URUGUAY("UY"),
    MAYOTTE("YT"),
    UNITED_STATES_MINOR_OUTLYING_ISLANDS("UM"),
    LEBANON("LB"),
    SAINT_LUCIA("LC"),
    LAOS("LA"),
    TUVALU("TV"),
    TAIWAN("TW"),
    TRINIDAD_AND_TOBAGO("TT"),
    TURKEY("TR"),
    SRI_LANKA("LK"),
    LIECHTENSTEIN("LI"),
    LATVIA("LV"),
    TONGA("TO"),
    LITHUANIA("LT"),
    LUXEMBOURG("LU"),
    LIBERIA("LR"),
    LESOTHO("LS"),
    THAILAND("TH"),
    FRENCH_SOUTHERN_TERRITORIES("TF"),
    TOGO("TG"),
    CHAD("TD"),
    TURKS_AND_CAICOS_ISLANDS("TC"),
    LIBYA("LY"),
    VATICAN("VA"),
    SAINT_VINCENT_AND_THE_GRENADINES("VC"),
    UNITED_ARAB_EMIRATES("AE"),
    ANDORRA("AD"),
    ANTIGUA_AND_BARBUDA("AG"),
    AFGHANISTAN("AF"),
    ANGUILLA("AI"),
    U_S_VIRGIN_ISLANDS("VI"),
    ICELAND("IS"),
    IRAN("IR"),
    ARMENIA("AM"),
    ALBANIA("AL"),
    ANGOLA("AO"),
    ANTARCTICA("AQ"),
    AMERICAN_SAMOA("AS"),
    ARGENTINA("AR"),
    AUSTRALIA("AU"),
    AUSTRIA("AT"),
    ARUBA("AW"),
    INDIA("IN"),
    ALAND_ISLANDS("AX"),
    AZERBAIJAN("AZ"),
    IRELAND("IE"),
    INDONESIA("ID"),
    UKRAINE("UA"),
    QATAR("QA"),
    MOZAMBIQUE("MZ"),
    INTERNATIONAL("WIPO"),
    /*WIPO available values for designated countries*/
    EUROPEAN_UNION_INTELLECTUAL_PROPERTY_OFFICE("EM"),
    BENELUX_OFFICE_FOR_INTELLECTUAL_PROPERTY("BX"),
    AFRICAN_INTELLECTUAL_PROPERTY_ORGANIZATION("OA");

    private final String code;

    @JsonCreator
    public static Country forValue(String code) {
        return Arrays.stream(Country.values())
                .filter(value -> value.code.equals(code) || value.name().equals(code))
                .findFirst()
                .orElseThrow(() -> new EntityNotFoundException(String.format("No country found %s", code)));
    }

}